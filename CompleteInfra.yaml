Parameters:

  EnvironmentName:
   Type: String

  ImageId:
   Type: String

  KeyName:
   Type: 'AWS::EC2::KeyPair::KeyName'

  VpcCIDR:
   Type: String
   Default: 10.0.0.0/16

  PublicSubnet1:
   Type: String
   Default: 10.0.0.0/21

  PublicSubnet2:
   Type: String
   Default: 10.0.10.0/21

  InstanceType:
   Type: String
   Default: t2.micro
   AllowedValues: [t2.nano, t2.micro, t2.small, t2.medium, t2.large, t2.xlarge, t2.2xlarge,
      t3.nano, t3.micro, t3.small, t3.medium, t3.large, t3.xlarge, t3.2xlarge,
      m4.large, m4.xlarge, m4.2xlarge, m4.4xlarge, m4.10xlarge,
      m5.large, m5.xlarge, m5.2xlarge, m5.4xlarge,
      c5.large, c5.xlarge, c5.2xlarge, c5.4xlarge, c5.9xlarge,
      g3.8xlarge,
      r5.large, r5.xlarge, r5.2xlarge, r5.4xlarge, r3.12xlarge,
      i3.xlarge, i3.2xlarge, i3.4xlarge, i3.8xlarge,
      d2.xlarge, d2.2xlarge, d2.4xlarge, d2.8xlarge]

Resources:
  VPC:
   Type: AWS::EC2::VPC
   Properties:
     CidrBlock: !Ref VpcCIDR
     EnableDnsSupport: True
     Tags:
      - Key: Name
        Value: !Ref EnvironmentName
  
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
     Tags:
      - Key: Name
        Value: !Ref EnvironmentName
  
  InternetGatewayAttachment:
   Type: AWS::EC2::VPCGatewayAttachment
   Properties:
    InternetGatewayId: !Ref InternetGateway
    VpcId: !Ref VPC

  Subnet1:
   Type: AWS::EC2::Subnet
   Properties:
    VpcId: !Ref VPC
    CidrBlock: !Ref PublicSubnet1
    AvailabilityZone: !Select [0, !GetAZs  '']
    MapPublicIpOnLaunch: True
    Tags:
     - Key: Name
       Value: !Sub ${EnvironmentName} pub sub (AZ1)

  Subnet2:
   Type: AWS::EC2::Subnet
   Properties:
    VpcId: !Ref VPC
    CidrBlock: !Ref PublicSubnet2
    AvailabilityZone: !Select [1, !GetAZs '']
    MapPublicIpOnLaunch: True
    Tags:
     - Key: Name
       Value: !Sub ${EnvironmentName} pub sub (AZ2)

  PublicRouteTable:
   Type: AWS::EC2::RouteTable
   Properties:
    VpcId: !Ref VPC
    Tags:
     - Key: Name
       Value: !Sub ${EnvironmentName} pub routes

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssosiation:
   Type: AWS::EC2::SubnetRouteTableAssociation
   Properties:
    RouteTableId: !Ref PublicRouteTable
    SubnetId: !Ref Subnet1
    
  PublicSubnet2RouteTableAssosiation:
   Type: AWS::EC2::SubnetRouteTableAssociation
   Properties:
    RouteTableId: !Ref PublicRouteTable
    SubnetId: !Ref Subnet2

  EC2HostSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC
      GroupDescription: Allow All
      SecurityGroupIngress:
          - CidrIp: 0.0.0.0/0
            IpProtocol: -1
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-Allow All

  Ec2Instance:
    Type: AWS::EC2::Instance
    Properties:
     SubnetId: !Ref Subnet1
     ImageId: !Ref ImageId
     SecurityGroupIds: [!Ref 'EC2HostSecurityGroup']
     KeyName: !Ref KeyName
     InstanceType: !Ref InstanceType
     Tags:
      - Key: Name
        Value: Jump







    
   

    



